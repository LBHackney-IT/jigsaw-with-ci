{"version":3,"sources":["JigsawGetRequest.jsx","jigsawLogic.js","JigsawAuth.jsx","App.jsx","index.js"],"names":["JigsawGetRequest","props","class","onClick","doJigsawGetRequest","style","marginLeft","setAuth","a","token","localStorage","getItem","doGetRequest","Authorization","uri","headers","options","resolveWithFullResponse","axios","get","httpResponse","JSON","parse","body","require","doLogin","username","password","Date","clear","getCSRFTokens","cookies","map","cookie","split","JigsawAuth","useState","setUsername","setPassword","needsAuth","setNeedsAuth","authError","setAuthError","doJigsawLogin","length","console","log","setItem","for","id","name","type","value","onChange","e","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAEaA,EAAmB,SAACC,GAE7B,OACJ,qCACU,wBAAQC,MAAM,0BAA0B,cAAY,eAAeC,QAASC,EAA5E,6BAGJ,wBAAQF,MAAM,0BAA0BG,MAAO,CAACC,WAAY,QAAQ,cAAY,eAAeH,QAAS,WAAQF,EAAMM,WAAtH,oCAOAH,EAAkB,uCAAG,4BAAAI,EAAA,6DACnBC,EAAQC,aAAaC,QAAQ,eADV,kBAGlBC,EAAa,mEAAmE,CAAEC,cAAc,UAAD,OAAYJ,MAHzF,2CAAH,qDAMlBG,EAAY,uCAAG,WAAeE,EAAIC,GAAnB,iBAAAP,EAAA,6DACfQ,EAAU,CAAEF,OACZC,IAASC,EAAQD,QAAUA,GAE/BC,EAAQC,yBAA0B,EAJf,SAKQC,QAAMC,IAAIH,GALlB,cAKbI,EALa,yBAOZC,KAAKC,MAAMF,EAAaG,OAPZ,2CAAH,wDCtBZL,EAAQM,EAAQ,GAMTC,EAAO,uCAAG,WAAOC,EAAUC,GAAjB,SAAAnB,EAAA,yDACH,KACF,YAEA,IAAIoB,KAAS,MAJR,gBAKLlB,aAAaC,QAAQ,eALhB,8BAOnBD,aAAamB,QAPM,SAQDC,IARC,uCAsCZ,MAtCY,4CAAH,wDA2CdA,EAAa,uCAAG,8BAAAtB,EAAA,sEACOU,EAAMC,IA/ClB,+CA+CgC,CAC7CJ,QAAS,CACP,KAAQ,aAHQ,cACdK,EADc,OAMZW,EAAUX,EAAaL,QAAQ,cAAciB,KACnD,SAACC,GAAD,OAAYA,EAAOC,MAAM,KAAK,MAOlB,GAdM,kBAgBb,CACLH,UACAtB,MAJY,KAdM,2CAAH,qDC7CN0B,EAAa,WACzB,MAAgCC,mBAAS,IAAzC,mBAAOV,EAAP,KAAiBW,EAAjB,KACA,EAAgCD,mBAAS,IAAzC,mBAAOT,EAAP,KAAiBW,EAAjB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAoBKC,EAAa,uCAAG,4BAAAnC,EAAA,yDACI,IAApBkB,EAASkB,QAAoC,IAApBjB,EAASiB,OADlB,uBAElBF,GAAa,GAFK,0CAKAjB,EAAQC,EAAUC,GALlB,OAMC,KADflB,EALc,QAMVmC,QACRC,QAAQC,IAAI,wBACZJ,GAAa,KAEbhC,aAAaqC,QAAQ,cAAetC,GACpC+B,GAAa,IAXK,2CAAH,qDAgBjB,OACGD,EACC,sBAAKrC,MAAM,kCAAX,UACA,uBAAOA,MAAM,wBAAwB8C,IAAI,gBAAzC,6BAGA,uBACE9C,MAAM,wBACN+C,GAAG,gBACHC,KAAK,YACLC,KAAK,OACLC,MAAO1B,EACP2B,SA1CiB,SAACC,GACxBjB,EAAYiB,EAAEC,OAAOH,OACrBV,GAAa,MA0CT,uBAAOxC,MAAM,wBAAwB8C,IAAI,gBAAzC,6BAGA,uBACE9C,MAAM,wBACN+C,GAAG,gBACHC,KAAK,YACLC,KAAK,OACLC,MAAOzB,EACP0B,SAhDiB,SAACC,GACxBhB,EAAYgB,EAAEC,OAAOH,OACrBV,GAAa,MAgDRD,GAAa,sBAAMvC,MAAM,wCAAZ,0CACd,wBAAQA,MAAM,0BAA0B,cAAY,eAAcC,QAASwC,EAA3E,0CAGA,8BAAK,cAAC,EAAD,CAAkBpC,QA/DX,WAChBiC,GAAcD,SCDDiB,EAPH,kBACV,qCACE,uDACA,cAAC,EAAD,QCDJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a8ac6b4f.chunk.js","sourcesContent":["import { axios } from 'axios';\n\nexport const JigsawGetRequest = (props) => {    \n\n    return (\n<>    \n          <button class=\"govuk-button lbh-button\" data-module=\"govuk-button\" onClick={doJigsawGetRequest}>\n        Get Jigsaw Data\n      </button>\n      <button class=\"govuk-button lbh-button\" style={{marginLeft: '15px'}}data-module=\"govuk-button\" onClick={() => { props.setAuth() }}>Authenticate Again</button>\n      </>\n\n    );\n}\n\n\nconst doJigsawGetRequest = async function() {\n  const token = localStorage.getItem('jigsawToken');\n\n  return doGetRequest('https://customers.housingjigsaw.co.uk/api/Customer/580739/Notes/',{ Authorization: `Bearer ${token}` });\n};\n\nconst doGetRequest = async function(uri,headers) {\n  let options = { uri };\n  if (headers) options.headers = headers; \n\n  options.resolveWithFullResponse = true;\n  const httpResponse = await axios.get(options);\n\n  return JSON.parse(httpResponse.body);\n};","const axios = require('axios');\n\n\nconst loginUrl = 'https://live.housingjigsaw.co.uk/auth/login/';\n\n\nexport const doLogin = async (username, password) => { \n  let bearerToken = null;\n  let lastLogin = null;\n\n  if (lastLogin > new Date() - 3600) {\n    bearerToken = localStorage.getItem('bearerToken')\n  } else {\n    localStorage.clear();\n const tokens = await getCSRFTokens();\n /*\n    // make auth request to Jigsaw\n    const authCredentials = {\n      Email: username,\n      Password: password,\n      __RequestVerificationToken: tokens.token,\n    };\n\n    const httpResponse = await axios.post({\n      url: loginUrl,\n      form: authCredentials,\n      headers: {\n        Cookie: tokens.cookies.join(\"; \"),\n        'Access-Control-Allow-Origin': '*',        \n      },\n      resolveWithFullResponse: true,\n      simple: false,\n    });\n\n    for (const header of httpResponse.headers[\"set-cookie\"]) {\n      const matched = header.match(/access_token=([^;]*)/);\n      if (matched) {\n        bearerToken = matched[1];\n        lastLogin = new Date();\n        return bearerToken\n      }\n    } */\n    \n    \n    return null;\n  }\n};\n\n\nconst getCSRFTokens = async function () {\n  const httpResponse = await axios.get(loginUrl, {\n    headers: {\n      'mode': 'no-cors',\n    }\n  })\n    const cookies = httpResponse.headers[\"set-cookie\"].map(\n    (cookie) => cookie.split(\";\")[0]\n  );\n\n  //const dom = new JSDOM(httpResponse.body);\n  //const token = dom.window.document.querySelector(\n  //  \"input[name=__RequestVerificationToken]\"\n  //).value;\n  const token = '';\n\n  return {\n    cookies,\n    token,\n  };\n};\n","import { useState } from \"react\";\nimport { JigsawGetRequest } from \"./JigsawGetRequest\";\nimport { doLogin } from \"./jigsawLogic\";\n\nexport const JigsawAuth = () => {\n const [username, setUsername] = useState('');\n const [password, setPassword] = useState('');\n const [needsAuth, setNeedsAuth] = useState(true);\n const [authError, setAuthError] = useState(false);\n\n  const setAuth = () => {\n  setNeedsAuth(!needsAuth);\n}\n\nconst onUsernameChange = (e) => {\n  setUsername(e.target.value);\n  setAuthError(false);\n}\n\nconst onPasswordChange = (e) => { \n  setPassword(e.target.value);\n  setAuthError(false);\n}\n\n\n\n\n\nconst doJigsawLogin = async function() { \n  if (username.length === 0 || password.length === 0) {\n    setAuthError(true);\n    return;\n  }\n  const token = await doLogin(username, password);\n  if (token.length === 0) {\n    console.log('Error authenticating');\n    setAuthError(true);\n  } else {\n    localStorage.setItem('jigsawToken', token);\n    setNeedsAuth(false);\n  }\n}\n\n\n  return (\n     needsAuth ?    \n      <div class=\"govuk-form-group lbh-form-group\">\n      <label class=\"govuk-label lbh-label\" for=\"input-example\">\n        Jigsaw Username\n      </label>\n      <input\n        class=\"govuk-input lbh-input\"\n        id=\"input-example\"\n        name=\"test-name\"\n        type=\"text\"\n        value={username}\n        onChange={onUsernameChange}\n      />\n      <label class=\"govuk-label lbh-label\" for=\"input-example\">\n        Jigsaw Password\n      </label>\n      <input\n        class=\"govuk-input lbh-input\"\n        id=\"input-example\"\n        name=\"test-name\"\n        type=\"text\"\n        value={password}\n        onChange={onPasswordChange}\n      />\n      {authError && <span class=\"govuk-error-message lbh-error-message\">Error validating credentials</span>}\n      <button class=\"govuk-button lbh-button\" data-module=\"govuk-button\"onClick={doJigsawLogin}> Authenticate with Jigsaw\n      </button>\n    </div>  \n    : <div><JigsawGetRequest setAuth={setAuth}/></div>\n  );\n};\n\n\n","import { JigsawAuth } from \"./JigsawAuth\"\n\n\nconst App = () => (\n  <>\n    <h1>Jigsaw Auth Demo - CI</h1>\n    <JigsawAuth />\n  </>\n)\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.scss\"\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}